# File: .github/workflows/workflow.yml

name: it just works

on:
 workflow_dispatch:

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

permissions:
      id-token: write
      contents: read
jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
     run:
       working-directory: ./terraform

    steps:

      - name: Checkout the repository to the runner
        uses: actions/checkout@v2
        
      - name: Azure login
        run: az login

      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Retrieve runner uid and gid
        id: uid-gid
        run: |
             echo "uid=$(id -u)" >> $GITHUB_OUTPUT
             echo "gid=$(id -g)" >> $GITHUB_OUTPUT

      - name: GitHub Actions Ansible Vault
        uses: taichunmin/github-actions-ansible-vault@v1.0.0
        env:
          UID: ${{ steps.uid-gid.outputs.uid }}
          GID: ${{ steps.uid-gid.outputs.gid }}
        with:
         vault_key: ${{ secrets.VAULT_KEY }}
         working-directory: ${{ github.workspace }}
         command: |
                  cd terraform/ansible/group_vars/all && \
                  ansible-vault decrypt secret.yml && \
                  chown $UID:$GID secret.yml && \
                  cd ../../../ && \
                  ansible-vault decrypt azure && \
                  chmod 400 azure && \
                  chown $UID:$GID azure

      - name: ansible playbook
        working-directory: ${{ github.workspace }}
        run:   |
               cd terraform/ansible 
               ansible-playbook init_sqldb.yaml --private-key ../azure
               ansible-playbook init_webapp.yaml --private-key ../azure
